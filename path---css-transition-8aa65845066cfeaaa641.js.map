{"version":3,"sources":["webpack:///path---css-transition-8aa65845066cfeaaa641.js","webpack:///./.cache/json/css-transition.json"],"names":["webpackJsonp","412","module","exports","data","metadata","displayName","composes","description","childMarkdownRemark","html","props","name","required","type","value","raw","defaultValue","doclets","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,gBAAAC,UAAA,gBAAAC,aAAyEC,qBAAuBC,KAAA,0jCAAykCC,QAAWC,KAAA,aAAAC,UAAA,EAAAC,MAA6CF,KAAA,yLAA8LG,MAAA,KAAAC,IAAA,mBAAuCC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,ygEAAqkEQ,SAAYJ,KAAA,8LAAqMF,KAAA,UAAAC,UAAA,EAAAC,MAA0CF,KAAA,iDAAAG,MAAA,KAAAC,IAAA,MAAgFC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,wHAA8HQ,SAAYJ,KAAA,oDAA2DF,KAAA,aAAAC,UAAA,EAAAC,MAA6CF,KAAA,iDAAAG,MAAA,KAAAC,IAAA,MAAgFC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,sIAA4IQ,SAAYJ,KAAA,oDAA2DF,KAAA,YAAAC,UAAA,EAAAC,MAA4CF,KAAA,iDAAAG,MAAA,KAAAC,IAAA,MAAgFC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,qMAA2MQ,SAAYJ,KAAA,oDAA2DF,KAAA,SAAAC,UAAA,EAAAC,MAAyCF,KAAA,8BAAAG,MAAA,KAAAC,IAAA,MAA6DC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,2GAAiHQ,SAAYJ,KAAA,iCAAwCF,KAAA,YAAAC,UAAA,EAAAC,MAA4CF,KAAA,6BAAAG,MAAA,KAAAC,IAAA,MAA4DC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,2GAAiHQ,SAAYJ,KAAA,gCAAuCF,KAAA,WAAAC,UAAA,EAAAC,MAA2CF,KAAA,8BAAAG,MAAA,KAAAC,IAAA,MAA6DC,aAAA,KAAAT,aAAoCC,qBAAuBC,KAAA,6LAAmMQ,SAAYJ,KAAA,mCAAyCK,aAAgBb,YAAA","file":"path---css-transition-8aa65845066cfeaaa641.js","sourcesContent":["webpackJsonp([212801242423939],{\n\n/***/ 412:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"metadata\":{\"displayName\":\"CSSTransition\",\"composes\":[\"./Transition\"],\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>Transition</code> component using CSS transitions and animations.\\nIt's inspired by the excellent <a href=\\\"http://www.nganimate.org/\\\">ng-animate</a> library.</p>\\n<p><code>CSSTransition</code> applies a pair of class names during the <code>appear</code>, <code>enter</code>,\\nand <code>exit</code> stages of the transition. The first class is applied and then a\\nsecond \\\"active\\\" class in order to activate the css animation. After the animation,\\nmatching <code>done</code> class names are applied to persist the animation state.</p>\\n<p>When the <code>in</code> prop is toggled to <code>true</code> the Component will get\\nthe <code>example-enter</code> CSS class and the <code>example-enter-active</code> CSS class\\nadded in the next tick. This is a convention based on the <code>classNames</code> prop.</p>\\n<h2>Example</h2>\\n<iframe src=\\\"https://codesandbox.io/embed/m77l2vp00x?fontsize=14\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\"}},\"props\":[{\"name\":\"classNames\",\"required\":false,\"type\":{\"name\":\"string | {\\n appear?: string,\\n appearActive?: string,\\n enter?: string,\\n enterActive?: string,\\n enterDone?: string,\\n exit?: string,\\n exitActive?: string,\\n exitDone?: string,\\n}\",\"value\":null,\"raw\":\"classNamesShape\"},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The animation classNames applied to the component as it enters, exits or has finished the transition.\\nA single name can be provided and it will be suffixed for each stage: e.g.</p>\\n<p><code>classNames=\\\"fade\\\"</code> applies <code>fade-enter</code>, <code>fade-enter-active</code>, <code>fade-enter-done</code>,\\n<code>fade-exit</code>, <code>fade-exit-active</code>, <code>fade-exit-done</code>, <code>fade-appear</code>, and <code>fade-appear-active</code>.\\nEach individual classNames can also be specified independently like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>classNames<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n appear<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-appear'</span><span class=\\\"token punctuation\\\">,</span>\\n appearActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-appear'</span><span class=\\\"token punctuation\\\">,</span>\\n enter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-enter'</span><span class=\\\"token punctuation\\\">,</span>\\n enterActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-enter'</span><span class=\\\"token punctuation\\\">,</span>\\n enterDone<span class=\\\"token punctuation\\\">:</span> 'my<span class=\\\"token operator\\\">-</span>done<span class=\\\"token operator\\\">-</span>enter<span class=\\\"token punctuation\\\">,</span>\\n exit<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-exit'</span><span class=\\\"token punctuation\\\">,</span>\\n exitActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-exit'</span><span class=\\\"token punctuation\\\">,</span>\\n exitDone<span class=\\\"token punctuation\\\">:</span> 'my<span class=\\\"token operator\\\">-</span>done<span class=\\\"token operator\\\">-</span>exit<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\"}},\"doclets\":{\"type\":\"{string | {\\n appear?: string,\\n appearActive?: string,\\n enter?: string,\\n enterActive?: string,\\n enterDone?: string,\\n exit?: string,\\n exitActive?: string,\\n exitDone?: string,\\n}}\"}},{\"name\":\"onEnter\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter' or 'appear' class is\\napplied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onEntering\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter-active' or\\n'appear-active' class is applied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onEntered\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter' or\\n'appear' classes are <strong>removed</strong> and the <code>done</code> class is added to the DOM node.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onExit\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit' class is\\napplied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement)\"}},{\"name\":\"onExiting\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit-active' is applied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement\"}},{\"name\":\"onExited\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit' classes\\nare <strong>removed</strong> and the <code>exit-done</code> class is added to the DOM node.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement)\"}}]}},\"pathContext\":{\"displayName\":\"CSSTransition\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---css-transition-8aa65845066cfeaaa641.js","module.exports = {\"data\":{\"metadata\":{\"displayName\":\"CSSTransition\",\"composes\":[\"./Transition\"],\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>Transition</code> component using CSS transitions and animations.\\nIt's inspired by the excellent <a href=\\\"http://www.nganimate.org/\\\">ng-animate</a> library.</p>\\n<p><code>CSSTransition</code> applies a pair of class names during the <code>appear</code>, <code>enter</code>,\\nand <code>exit</code> stages of the transition. The first class is applied and then a\\nsecond \\\"active\\\" class in order to activate the css animation. After the animation,\\nmatching <code>done</code> class names are applied to persist the animation state.</p>\\n<p>When the <code>in</code> prop is toggled to <code>true</code> the Component will get\\nthe <code>example-enter</code> CSS class and the <code>example-enter-active</code> CSS class\\nadded in the next tick. This is a convention based on the <code>classNames</code> prop.</p>\\n<h2>Example</h2>\\n<iframe src=\\\"https://codesandbox.io/embed/m77l2vp00x?fontsize=14\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\"}},\"props\":[{\"name\":\"classNames\",\"required\":false,\"type\":{\"name\":\"string | {\\n appear?: string,\\n appearActive?: string,\\n enter?: string,\\n enterActive?: string,\\n enterDone?: string,\\n exit?: string,\\n exitActive?: string,\\n exitDone?: string,\\n}\",\"value\":null,\"raw\":\"classNamesShape\"},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The animation classNames applied to the component as it enters, exits or has finished the transition.\\nA single name can be provided and it will be suffixed for each stage: e.g.</p>\\n<p><code>classNames=\\\"fade\\\"</code> applies <code>fade-enter</code>, <code>fade-enter-active</code>, <code>fade-enter-done</code>,\\n<code>fade-exit</code>, <code>fade-exit-active</code>, <code>fade-exit-done</code>, <code>fade-appear</code>, and <code>fade-appear-active</code>.\\nEach individual classNames can also be specified independently like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>classNames<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n appear<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-appear'</span><span class=\\\"token punctuation\\\">,</span>\\n appearActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-appear'</span><span class=\\\"token punctuation\\\">,</span>\\n enter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-enter'</span><span class=\\\"token punctuation\\\">,</span>\\n enterActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-enter'</span><span class=\\\"token punctuation\\\">,</span>\\n enterDone<span class=\\\"token punctuation\\\">:</span> 'my<span class=\\\"token operator\\\">-</span>done<span class=\\\"token operator\\\">-</span>enter<span class=\\\"token punctuation\\\">,</span>\\n exit<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-exit'</span><span class=\\\"token punctuation\\\">,</span>\\n exitActive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-active-exit'</span><span class=\\\"token punctuation\\\">,</span>\\n exitDone<span class=\\\"token punctuation\\\">:</span> 'my<span class=\\\"token operator\\\">-</span>done<span class=\\\"token operator\\\">-</span>exit<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\"}},\"doclets\":{\"type\":\"{string | {\\n appear?: string,\\n appearActive?: string,\\n enter?: string,\\n enterActive?: string,\\n enterDone?: string,\\n exit?: string,\\n exitActive?: string,\\n exitDone?: string,\\n}}\"}},{\"name\":\"onEnter\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter' or 'appear' class is\\napplied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onEntering\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter-active' or\\n'appear-active' class is applied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onEntered\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement, isAppearing: bool)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'enter' or\\n'appear' classes are <strong>removed</strong> and the <code>done</code> class is added to the DOM node.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement, isAppearing: bool)\"}},{\"name\":\"onExit\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit' class is\\napplied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement)\"}},{\"name\":\"onExiting\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit-active' is applied.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement\"}},{\"name\":\"onExited\",\"required\":false,\"type\":{\"name\":\"Function(node: HtmlElement)\",\"value\":null,\"raw\":null},\"defaultValue\":null,\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A <code>&#x3C;Transition></code> callback fired immediately after the 'exit' classes\\nare <strong>removed</strong> and the <code>exit-done</code> class is added to the DOM node.</p>\"}},\"doclets\":{\"type\":\"Function(node: HtmlElement)\"}}]}},\"pathContext\":{\"displayName\":\"CSSTransition\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/css-transition.json\n// module id = 412\n// module chunks = 212801242423939"],"sourceRoot":""}