{"version":3,"sources":["webpack:///./src/pages/testing.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","propTypes","location","PropTypes","object","isRequired","data","shape","site","siteMetadata","componentPages","arrayOf","path","string","displayName","Testing","_ref","a","createElement","className","trim","href","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","func","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","pathname","Layout","children","Fragment","lang","fixed","bg","variant","expand","collapseOnSelect","Brand","as","Link","to","Toggle","Collapse","map","_ref2","key","activeClassName","style","paddingTop","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-testing-js-609b35464b7a031ae41b.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Layout from '../components/Layout';\n\nconst propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        componentPages: PropTypes.arrayOf(\n          PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            displayName: PropTypes.string.isRequired,\n          })\n        ).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst Testing = ({ data, location }) => (\n  <Layout data={data} location={location}>\n    <Container>\n      <h1>Testing Components with Transitions</h1>\n      <p>\n        In some situations, like visual snapshot testing, it's helpful to\n        disable transitions so they don't complicate the test, or introduce\n        abitrary waits. To make this easier <code>react-transition-group</code>{' '}\n        exposes a way to globally toggle transitions. When set,{' '}\n        <strong>all</strong> transitions, when toggled, will immediately switch\n        to their entered or exited states as appropriate.\n      </p>\n      <pre className=\"language-js\">\n        <code>\n          {`\nimport { config } from 'react-transition-group\n\nconfig.disabled = true\n              `.trim()}\n        </code>\n      </pre>\n      <blockquote>\n        <p>\n          <b>Note</b>: This <strong>does not</strong> automatically disable\n          animations. It only disabled waits in <code>Transition</code>. You may\n          also have to disable animation as appropriate for the library.\n          example:{' '}\n          <a href=\"http://velocityjs.org/#mock\">Mocking in Velocity.js</a>\n        </p>\n      </blockquote>\n    </Container>\n  </Layout>\n);\n\nTesting.propTypes = propTypes;\n\nexport default Testing;\n\nexport const pageQuery = graphql`\n  query TestingQuery {\n    site {\n      ...Layout_site\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport '../css/bootstrap.scss';\nimport '../css/prism-theme.scss';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        componentPages: PropTypes.arrayOf(\n          PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            displayName: PropTypes.string.isRequired,\n          })\n        ).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst Layout = ({ data, children }) => (\n  <>\n    <Helmet>\n      <html lang=\"en\" />\n      <title>React Transition Group</title>\n    </Helmet>\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"md\" collapseOnSelect>\n      <Navbar.Brand as={Link} to=\"/\">\n        React Transition Group\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          {data.site.siteMetadata.componentPages.map(\n            ({ path, displayName }) => (\n              <Nav.Link key={path} as={Link} to={path} activeClassName=\"active\">\n                {displayName}\n              </Nav.Link>\n            )\n          )}\n        </Nav>\n        <Nav>\n          <Nav.Link as={Link} to=\"/with-react-router\" activeClassName=\"active\">\n            With React Router\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/testing\" activeClassName=\"active\">\n            Testing\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    <div style={{ paddingTop: '5rem' }}>{children}</div>\n  </>\n);\n\nLayout.propTypes = propTypes;\n\nexport default Layout;\n\nexport const exposedComponentsFragment = graphql`\n  fragment Layout_site on Site {\n    siteMetadata {\n      componentPages {\n        path\n        displayName\n        codeSandboxId\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}