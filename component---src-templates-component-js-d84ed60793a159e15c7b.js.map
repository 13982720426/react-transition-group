{"version":3,"sources":["webpack:///./src/templates/component.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Example.js"],"names":["cleanDocletValue","str","trim","replace","extractMarkdown","_ref","description","childMarkdownRemark","html","propTypes","location","PropTypes","shape","pathname","string","isRequired","data","site","siteMetadata","componentPages","arrayOf","displayName","codeSandboxId","metadata","composes","object","ComponentTemplate","renderProp","prop","componentName","defaultValue","name","required","typeInfo","_this","renderType","id","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","style","marginTop","marginBottom","href","dangerouslySetInnerHTML","__html","paddingLeft","type","value","render","_this2","this","_this$props","props","find","page","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","console","log","typeof","fontStyle","fontSize","map","p","join","obj","_this3","getDisplayTypeName","doclets","className","renderObject","JSON","stringify","reduce","current","val","i","list","item","React","isValidElement","cloneElement","concat","length","child","renderEnum","enumType","enumValues","Component","typeName","transform","simpleType","query","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","func","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","path","Layout","children","Fragment","lang","fixed","bg","variant","expand","collapseOnSelect","Brand","as","Link","to","Toggle","Collapse","_ref2","activeClassName","paddingTop","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","codeSandbox","title","Example","src","display","width","height","border","borderRadius","overflow","sandbox"],"mappings":"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","file":"component---src-templates-component-js-d84ed60793a159e15c7b.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport transform from 'lodash/transform';\n\nimport Layout from '../components/Layout';\nimport Example from '../components/Example';\n\nfunction displayObj(obj) {\n  return JSON.stringify(obj, null, 2).replace(/\"|'/g, '');\n}\n\nlet cleanDocletValue = str =>\n  str\n    .trim()\n    .replace(/^\\{/, '')\n    .replace(/\\}$/, '');\n\nconst extractMarkdown = ({ description }) =>\n  description &&\n  description.childMarkdownRemark &&\n  description.childMarkdownRemark.html;\n\nconst propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        componentPages: PropTypes.arrayOf(\n          PropTypes.shape({\n            displayName: PropTypes.string.isRequired,\n            codeSandboxId: PropTypes.string,\n          })\n        ).isRequired,\n      }).isRequired,\n    }).isRequired,\n    metadata: PropTypes.shape({\n      displayName: PropTypes.string,\n      composes: PropTypes.arrayOf(PropTypes.string),\n      description: PropTypes.object.isRequired,\n    }),\n  }).isRequired,\n};\n\nclass ComponentTemplate extends React.Component {\n  render() {\n    const { data, location } = this.props;\n    const { metadata } = data;\n    const { componentPages } = data.site.siteMetadata;\n    const { codeSandboxId } = componentPages.find(\n      page => page.displayName === metadata.displayName\n    );\n    return (\n      <Layout data={data} location={location}>\n        <div>\n          <Container>\n            <h1 id={metadata.displayName}>{metadata.displayName}</h1>\n            {console.log({ typeof: typeof extractMarkdown(metadata) })}\n            <div\n              dangerouslySetInnerHTML={{ __html: extractMarkdown(metadata) }}\n            />\n          </Container>\n\n          {/* {codeSandboxId != null && (\n            <Example\n              codeSandbox={{\n                title: `${metadata.displayName} Component`,\n                id: codeSandboxId,\n              }}\n            />\n          )} */}\n\n          <Container>\n            <h2>\n              <div>Props</div>\n              {metadata.composes && (\n                <small style={{ fontStyle: 'italic', fontSize: '70%' }}>\n                  Accepts all props from{' '}\n                  {metadata.composes\n                    .map(p => `<${p.replace('./', '')}>`)\n                    .join(', ')}{' '}\n                  unless otherwise noted.\n                </small>\n              )}\n            </h2>\n            {metadata.props.map(p => this.renderProp(p, metadata.displayName))}\n          </Container>\n        </div>\n      </Layout>\n    );\n  }\n\n  renderProp = (prop, componentName) => {\n    const { defaultValue, name, required } = prop;\n    let typeInfo = this.renderType(prop);\n    let id = `${componentName}-prop-${name}`;\n\n    return (\n      <section key={name}>\n        <h3 id={id} style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>\n          <a href={`#${id}`}>\n            <code>{name}</code>\n          </a>\n        </h3>\n        <div dangerouslySetInnerHTML={{ __html: extractMarkdown(prop) }} />\n\n        <div style={{ paddingLeft: 0 }}>\n          <div>\n            {'type: '}\n            {typeInfo && typeInfo.type === 'pre' ? (\n              typeInfo\n            ) : (\n              <code>{typeInfo}</code>\n            )}\n          </div>\n          {required && <div>required</div>}\n          {defaultValue && (\n            <div>\n              default: <code>{defaultValue.value.trim()}</code>\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  };\n\n  renderType(prop) {\n    let type = prop.type || {};\n    let name = getDisplayTypeName(type.name);\n    let doclets = prop.doclets || {};\n\n    switch (name) {\n      case 'node':\n        return 'any';\n      case 'function':\n        return 'Function';\n      case 'elementType':\n        return 'ReactClass<any>';\n      case 'dateFormat':\n        return 'string | (date: Date, culture: ?string, localizer: Localizer) => string';\n      case 'dateRangeFormat':\n        return '(range: { start: Date, end: Date }, culture: ?string, localizer: Localizer) => string';\n      case 'object':\n      case 'Object':\n        if (type.value)\n          return (\n            <pre className=\"shape-prop\">\n              {displayObj(renderObject(type.value))}\n            </pre>\n          );\n\n        return name;\n      case 'union':\n        return type.value.reduce((current, val, i, list) => {\n          val = typeof val === 'string' ? { name: val } : val;\n          let item = this.renderType({ type: val });\n\n          if (React.isValidElement(item)) {\n            item = React.cloneElement(item, { key: i });\n          }\n\n          current = current.concat(item);\n\n          return i === list.length - 1 ? current : current.concat(' | ');\n        }, []);\n      case 'array':\n      case 'Array': {\n        let child = this.renderType({ type: type.value });\n\n        return (\n          <span>\n            {'Array<'}\n            {child}\n            {'>'}\n          </span>\n        );\n      }\n      case 'enum':\n        return this.renderEnum(type);\n      case 'custom':\n        return cleanDocletValue(doclets.type || name);\n      default:\n        return name;\n    }\n  }\n\n  renderEnum(enumType) {\n    const enumValues = enumType.value || [];\n    return <code>{enumValues.join(' | ')}</code>;\n  }\n}\n\nComponentTemplate.propTypes = propTypes;\n\nfunction getDisplayTypeName(typeName) {\n  if (typeName === 'func') {\n    return 'function';\n  } else if (typeName === 'bool') {\n    return 'boolean';\n  } else if (typeName === 'object') {\n    return 'Object';\n  }\n\n  return typeName;\n}\n\nfunction renderObject(props) {\n  return transform(\n    props,\n    (obj, val, key) => {\n      obj[val.required ? key : key + '?'] = simpleType(val);\n    },\n    {}\n  );\n}\n\nfunction simpleType(prop) {\n  let type = prop.type || {};\n  let name = getDisplayTypeName(type.name);\n  let doclets = prop.doclets || {};\n\n  switch (name) {\n    case 'node':\n      return 'any';\n    case 'function':\n      return 'Function';\n    case 'elementType':\n      return 'ReactClass<any>';\n    case 'object':\n    case 'Object':\n      if (type.value) return renderObject(type.value);\n      return name;\n    case 'array':\n    case 'Array': {\n      let child = simpleType({ type: type.value });\n\n      return 'Array<' + child + '>';\n    }\n    case 'custom':\n      return cleanDocletValue(doclets.type || name);\n    default:\n      return name;\n  }\n}\n\nexport const query = graphql`\n  query ComponentMetadata($displayName: String!) {\n    site {\n      ...Layout_site\n    }\n    metadata: componentMetadata(displayName: { eq: $displayName }) {\n      displayName\n      composes\n      description: childComponentDescription {\n        childMarkdownRemark {\n          html\n        }\n      }\n      props {\n        name\n        required\n        type {\n          name\n          value\n          raw\n        }\n        defaultValue {\n          value\n          computed\n        }\n        description: childComponentDescription {\n          childMarkdownRemark {\n            html\n          }\n        }\n        doclets\n      }\n    }\n  }\n`;\n\nexport default ComponentTemplate;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport '../css/bootstrap.scss';\nimport '../css/prism-theme.scss';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        componentPages: PropTypes.arrayOf(\n          PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            displayName: PropTypes.string.isRequired,\n          })\n        ).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst Layout = ({ data, children }) => (\n  <>\n    <Helmet>\n      <html lang=\"en\" />\n    </Helmet>\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"md\" collapseOnSelect>\n      <Navbar.Brand as={Link} to=\"/\">\n        React Transition Group\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          {data.site.siteMetadata.componentPages.map(\n            ({ path, displayName }) => (\n              <Nav.Link key={path} as={Link} to={path} activeClassName=\"active\">\n                {displayName}\n              </Nav.Link>\n            )\n          )}\n        </Nav>\n        <Nav>\n          <Nav.Link as={Link} to=\"/with-react-router\" activeClassName=\"active\">\n            With React Router\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    <div style={{ paddingTop: '5rem' }}>{children}</div>\n  </>\n);\n\nLayout.propTypes = propTypes;\n\nexport default Layout;\n\nexport const exposedComponentsFragment = graphql`\n  fragment Layout_site on Site {\n    siteMetadata {\n      componentPages {\n        path\n        displayName\n        codeSandboxId\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\n\nconst propTypes = {\n  codeSandbox: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst Example = ({ codeSandbox }) => (\n  <div style={{ marginBottom: '1.5rem' }}>\n    <Container>\n      <h2>Example</h2>\n    </Container>\n    <iframe\n      title={codeSandbox.title}\n      src={`https://codesandbox.io/embed/${codeSandbox.id}?fontsize=14`}\n      style={{\n        display: 'block',\n        width: '100%',\n        height: '500px',\n        border: 0,\n        borderRadius: 4,\n        overflow: 'hidden',\n      }}\n      sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n    />\n  </div>\n);\n\nExample.propTypes = propTypes;\n\nexport default Example;\n"],"sourceRoot":""}